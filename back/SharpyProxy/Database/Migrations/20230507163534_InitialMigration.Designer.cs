// <auto-generated />
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SharpyProxy.Database;

#nullable disable

namespace SharpyProxy.Database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230507163534_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SharpyProxy.Database.Entities.ClusterDestinationEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ClusterId")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id", "ClusterId");

                    b.HasIndex("ClusterId");

                    b.ToTable("ClusterDestinations");
                });

            modelBuilder.Entity("SharpyProxy.Database.Entities.ClusterEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Clusters");
                });

            modelBuilder.Entity("SharpyProxy.Database.Entities.RouteEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ClusterId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<string>>("MatchHosts")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("MatchPath")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClusterId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("SharpyProxy.Database.Entities.ClusterDestinationEntity", b =>
                {
                    b.HasOne("SharpyProxy.Database.Entities.ClusterEntity", "Cluster")
                        .WithMany("Destinations")
                        .HasForeignKey("ClusterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cluster");
                });

            modelBuilder.Entity("SharpyProxy.Database.Entities.RouteEntity", b =>
                {
                    b.HasOne("SharpyProxy.Database.Entities.ClusterEntity", "Cluster")
                        .WithMany("Routes")
                        .HasForeignKey("ClusterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cluster");
                });

            modelBuilder.Entity("SharpyProxy.Database.Entities.ClusterEntity", b =>
                {
                    b.Navigation("Destinations");

                    b.Navigation("Routes");
                });
#pragma warning restore 612, 618
        }
    }
}
